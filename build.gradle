buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'nu.studer:gradle-jooq-plugin:3.0.2'
        classpath 'org.postgresql:postgresql:42.2.5'
        classpath "gradle.plugin.com.boxfuse.client:gradle-plugin-publishing:5.2.1"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.20.0"
        classpath "org.ajoberstar.grgit:grgit-gradle:3.0.0-rc.2"
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.0.0-beta1"
    }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}
dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'nu.studer.jooq'
apply plugin: 'org.flywaydb.flyway'
apply plugin: "com.github.ben-manes.versions"
apply plugin: "com.gorylenko.gradle-git-properties"

group = 'com.hicks-team'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
//    implementation("org.springframework.boot:spring-boot-devtools")
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation('org.springframework.boot:spring-boot-starter-jersey')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-security")

//    implementation('org.springframework.boot:spring-boot-starter-jooq')
    implementation 'org.jooq:jooq'
    implementation "org.flywaydb:flyway-core:5.2.1"
    implementation 'org.postgresql:postgresql:42.2.5'
    jooqRuntime 'org.postgresql:postgresql:42.2.5'

    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'javax.servlet.jsp:javax.servlet.jsp-api:2.3.3'
    implementation 'javax.servlet:jstl'


    testImplementation("junit:junit")
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation("org.springframework.security:spring-security-test")
}

gitProperties {
    gitPropertiesDir = "${project.rootDir}/src/main/resources"
}

ext['jooq.version'] = '3.11.2'

jooq {
    version = '3.11.2'
    edition = 'OSS'

    tab(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/tab'
            user = 'postgres'
            password = 'password'
            schema = 'public'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
                forcedTypes {
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'JSONB?'
                    }
                    forcedType {
                        name = 'varchar'
                        expression = '.*'
                        types = 'INET'
                    }
                }
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'com.hicksteam.tab.db.gen'
                directory = 'src/main/generated/java'
            }
        }
    }
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/tab'
    user = 'postgres'
    password = 'password'
    schemas = ['public']
}

generateTabJooqSchemaSource.dependsOn flywayMigrate

bootRun {
    systemProperties = System.properties
}