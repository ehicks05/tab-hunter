buildscript {
    ext {
        springBootVersion = '2.3.0.RELEASE'
        postgresqlVersion = '42.2.12'
    }
    repositories {
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.postgresql:postgresql:${postgresqlVersion}"
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.28.0'
    id "org.flywaydb.flyway" version "6.4.3"
    id 'nu.studer.jooq' version '4.2'
    id "com.gorylenko.gradle-git-properties" version "2.2.2"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'nu.studer.jooq'
apply plugin: 'org.flywaydb.flyway'
apply plugin: "com.gorylenko.gradle-git-properties"

group = 'com.hicks-team'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
}

ext {
    set('springBootAdminVersion', '2.2.3')
    set('springCloudVersion', "Hoxton.SR5")
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation("org.springframework.boot:spring-boot-starter-thymeleaf")
    implementation('org.springframework.boot:spring-boot-starter-jersey')
    implementation('org.springframework.boot:spring-boot-starter-web')
    implementation("org.springframework.boot:spring-boot-starter-actuator")
    implementation("org.springframework.boot:spring-boot-starter-security")
    implementation 'de.codecentric:spring-boot-admin-starter-client'

    implementation('org.springframework.boot:spring-boot-starter-jooq')
//    implementation 'org.jooq:jooq'
    implementation "org.flywaydb:flyway-core:6.4.3"
    implementation "org.postgresql:postgresql:${postgresqlVersion}"
    jooqRuntime "org.postgresql:postgresql:${postgresqlVersion}"

    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    developmentOnly("org.springframework.boot:spring-boot-devtools")
    testImplementation("junit:junit")
    testImplementation("org.springframework.security:spring-security-test")
}

ext['jooq.version'] = '3.13.1'

jooq {
    version = '3.13.1'
    edition = 'OSS'

    tab(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/tabhunter'
            user = 'postgres'
            password = 'password'
            schema = 'public'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            strategy {
                name = 'org.jooq.codegen.DefaultGeneratorStrategy'
            }
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
                forcedTypes {
                    forcedType {
                        name = 'varchar'
                        includeExpression = '.*'
                        includeTypes = 'JSONB?'
                    }
                    forcedType {
                        name = 'varchar'
                        includeExpression = '.*'
                        includeTypes = 'INET'
                    }
                }
            }
            generate {
                relations = true
                deprecated = false
                records = true
                immutablePojos = true
                fluentSetters = true
            }
            target {
                packageName = 'com.hicksteam.tab.db.gen'
                directory = 'src/main/generated/java'
            }
        }
    }
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/tabhunter'
    user = 'postgres'
    password = 'password'
    schemas = ['public']
}

generateTabJooqSchemaSource.dependsOn flywayMigrate

bootRun {
    systemProperties = System.properties
}

bootJar {
    launchScript()
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}